// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  name     String?
  password String
  hashedRt String?
  basket   Basket?
  favorite Favorite?
  recipes  Recipe[]
}

model Basket {
  id      String   @id @default(cuid())
  userId  String   @unique
  // ingredients Ingredient[]r
  recipes Recipe[]
  user    User     @relation(fields: [userId], references: [id])
}

model Recipe {
  id             String                  @id @default(cuid())
  authorId       String
  title          String
  createdAt      DateTime                @default(now())
  updatedAt      DateTime?               @updatedAt
  difficulty     Difficulty              @default(NOSCALE)
  baskets        Basket[]
  favorite       Favorite[]
  ingredientsNum NumIngredientOnRecipe[]
  instructions   String[]
  // itemList Item[]
  likesNum       Int                     @default(0)
  serving        Int                     @default(0)
  viewrs         Int                     @default(0)
  author         User                    @relation(fields: [authorId], references: [id])
  @@unique([authorId, title])
}

model Ingredient {
  id        String                  @id @default(cuid())
  name      String                  @unique
  onRecipes NumIngredientOnRecipe[]
  // basket    Basket[]
}

model NumIngredientOnRecipe {
  ingredientId String
  recipeId     String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  unit         String
  value        String
  @@id([recipeId, ingredientId])
}

model Favorite {
  id      String   @id @default(cuid())
  userId  String   @unique
  recipes Recipe[]
  user    User     @relation(fields: [userId], references: [id])
}

// model Item {
//   id        Int      @default(autoincrement()) @id
//   fromRecipeId Int
//   name String
//   unit String
//   value Int
//   fromRecipe Recipe @relation(fields: [fromRecipeId], references: [id])
// }

enum Difficulty {
  DIFFICULT5
  DIFFICULT4
  MODERATE3
  EASY2
  EASY1
  NOSCALE
}