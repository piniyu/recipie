{
  "version": 3,
  "sources": ["../../../app/components/basket/recipe-servings-form.tsx", "../../../app/components/inputs/number-input.tsx", "../../../node_modules/@hookform/error-message/src/ErrorMessage.tsx", "../../../app/components/card/card-list-item.tsx"],
  "sourcesContent": ["import { Form } from '@remix-run/react'\nimport { useCallback, useEffect } from 'react'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { useAppDispatch } from '../../store/configure-store'\nimport { updateRecipeServings } from '../../store/recipe-servings-slice'\nimport NumberInput from '../inputs/number-input'\n\ntype FormProps = { input: number }\n\nconst ServingsForm = ({\n  recipeId,\n  defaultValue = 1,\n}: {\n  recipeId: string\n  defaultValue?: number\n}) => {\n  const methods = useForm<FormProps>({\n    defaultValues: { input: defaultValue },\n    mode: 'onChange',\n  })\n  const dispatch = useAppDispatch()\n  /** submit on change **/\n  const onChangeSubmit = useCallback(\n    (value: FormProps) => {\n      dispatch(\n        updateRecipeServings({\n          servings: value.input,\n          recipeId,\n        }),\n      )\n    },\n    [dispatch, recipeId],\n  )\n  useEffect(() => {\n    methods.reset({ input: defaultValue })\n  }, [defaultValue, methods])\n  return (\n    <FormProvider {...methods}>\n      <Form onSubmit={e => void e.preventDefault()}>\n        {/* <input type=\"hidden\" value={location.pathname} name=\"redirectTo\" /> */}\n        <NumberInput\n          registerName=\"input\"\n          hasSetBtn\n          onSubmit={(v: FormProps) => {\n            onChangeSubmit(v)\n          }}\n        />\n      </Form>\n    </FormProvider>\n  )\n}\n\nexport default ServingsForm\n", "import { useEffect, useRef } from 'react'\nimport { useController, useFormContext } from 'react-hook-form'\nimport { ErrorMessage } from '@hookform/error-message'\n\nconst NumberInput = ({\n  hasSetBtn,\n  unit,\n  registerName,\n  maxValue,\n  showErrors,\n  onChange,\n  onSubmit,\n}: {\n  showErrors?: boolean\n  maxValue?: number\n  registerName: string\n  hasSetBtn?: boolean\n  unit?: string\n  onChange?: (e: React.ChangeEvent) => void\n  onSubmit?: (value: any) => void\n}) => {\n  const {\n    watch,\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useFormContext()\n  const input = watch(registerName)\n  const inputRef = useRef<HTMLInputElement | null>(null)\n\n  useEffect(() => {\n    const subscription = watch(() => {\n      if (onSubmit) {\n        handleSubmit(onSubmit)()\n      }\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [handleSubmit, onSubmit, watch])\n\n  return (\n    <div className=\"flex\">\n      {hasSetBtn ? (\n        <button\n          className=\" flex items-center rounded-l-lg border border-r-0 border-gray-200 disabled:text-gray-400\"\n          type=\"button\"\n          onClick={() => {\n            if (inputRef.current && parseInt(inputRef.current.value) > 1) {\n              inputRef.current.value = parseInt(inputRef.current.value) - 1 + ''\n              setValue('input', parseInt(inputRef.current.value))\n              // console.log(input)\n            }\n          }}\n          disabled={input <= 1}\n        >\n          <span className=\"material-symbols-outlined\">remove</span>\n        </button>\n      ) : null}\n      <input\n        {...register(registerName, {\n          valueAsNumber: true,\n          max: maxValue\n            ? { value: maxValue, message: 'Out of original quantity' }\n            : undefined,\n          min: 0,\n        })}\n        type=\"number\"\n        className={`input max-w-[60px] text-right ${\n          errors.input?.message\n            ? 'outline-red-500 bg-red-50 border-red-500 text-red-500'\n            : ''\n        }\n        ${hasSetBtn ? 'rounded-none' : ''}\n        `}\n        placeholder=\"0\"\n        onKeyDown={e => {\n          if (\n            (!input || (input && input.toString().length === 0)) &&\n            e.key === '0'\n          ) {\n            e.preventDefault()\n          }\n          if (\n            maxValue !== undefined &&\n            !isNaN(input) &&\n            (input + '').replace('.', '').length ===\n              (maxValue + '').replace('.', '').length &&\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].includes(parseInt(e.key))\n          ) {\n            e.preventDefault()\n          }\n          if (e.key === '-') {\n            e.preventDefault()\n          }\n        }}\n        ref={el => {\n          inputRef.current = el\n          register('input').ref(el)\n        }}\n      />\n      {hasSetBtn ? (\n        <button\n          type=\"button\"\n          className=\"flex items-center border border-l-0 border-gray-200 rounded-r-lg\"\n          onClick={() => {\n            if (inputRef.current) {\n              inputRef.current.value = parseInt(inputRef.current.value) + 1 + ''\n              setValue('input', parseInt(inputRef.current.value))\n            }\n          }}\n        >\n          <span className=\"material-symbols-outlined\">add</span>\n        </button>\n      ) : null}\n      {unit ? <span className=\"ml-2 flex items-center\">{unit}</span> : null}\n      {showErrors && (\n        <ErrorMessage\n          name={registerName}\n          errors={errors}\n          render={({ message }) => (\n            <span className=\"absolute left-0 top-full text-red-500 text-xs\">\n              {message}\n            </span>\n          )}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default NumberInput\n", "import * as React from 'react';\nimport { useFormContext, get, FieldErrors } from 'react-hook-form';\nimport { Props } from './types';\n\nconst ErrorMessage = <\n  TFieldErrors extends FieldErrors,\n  TAs extends\n    | undefined\n    | React.ReactElement\n    | React.ComponentType<any>\n    | keyof JSX.IntrinsicElements = undefined\n>({\n  as,\n  errors,\n  name,\n  message,\n  render,\n  ...rest\n}: Props<TFieldErrors, TAs>) => {\n  const methods = useFormContext();\n  const error = get(errors || methods.formState.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  const { message: messageFromRegister, types } = error;\n  const props = Object.assign({}, rest, {\n    children: messageFromRegister || message,\n  });\n\n  return React.isValidElement(as)\n    ? React.cloneElement(as, props)\n    : render\n    ? (render({\n        message: messageFromRegister || message,\n        messages: types,\n      }) as React.ReactElement)\n    : React.createElement((as as string) || React.Fragment, props);\n};\n\nexport { ErrorMessage };\n", "import { Form, useLocation } from '@remix-run/react'\nimport React, { ReactNode } from 'react'\nimport img1 from '../../../public/assets/img1.jpeg'\nimport NumberInput from '../inputs/number-input'\n\nexport default function CardListItem({\n  title,\n  onDelete,\n  recipeId,\n  subTitle,\n}: {\n  title: string\n  onDelete?: (e: React.FormEvent) => void\n  recipeId: string\n  subTitle?: ReactNode\n}): JSX.Element {\n  const location = useLocation()\n  return (\n    <div className=\"flex gap-4 \">\n      <div className=\"w-24\">\n        <div className=\"aspect-w-4 aspect-h-3 overflow-hidden rounded-lg shadow-md\">\n          {/* <div className=\"p-1 bg-white rounded-lg\"> */}\n          <img\n            className=\"w-full h-full object-cover object-center \"\n            src={img1}\n          />\n          {/* </div> */}\n        </div>\n      </div>\n\n      <div className=\"flex-1 flex flex-col justify-between\">\n        <h4 className=\"flex-1 text-black font-medium\">{title}</h4>\n        {subTitle}\n      </div>\n      {onDelete ? (\n        <Form className=\"flex \" onSubmit={onDelete} method=\"post\">\n          <input\n            type=\"hidden\"\n            name=\"redirectTo\"\n            value={`${location.pathname}${location.search}`}\n          />\n          <input type=\"hidden\" name=\"deleteId\" value={recipeId} />\n          <button\n            className=\"flex p-1 rounded-full\"\n            // name={recipeId}\n            type=\"submit\"\n          >\n            <span className=\"material-symbols-rounded text-lg leading-none text-gray-500\">\n              close\n            </span>\n          </button>\n        </Form>\n      ) : null}\n    </div>\n  )\n}\n"],
  "mappings": "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",
  "names": ["import_react", "ErrorMessage", "s", "as", "errors", "name", "message", "render", "rest", "methods", "useFormContext", "error", "get", "formState", "messageFromRegister", "types", "props", "Object", "assign", "children", "isValidElement", "cloneElement", "messages", "createElement", "Fragment", "e", "import_jsx_dev_runtime", "e", "import_jsx_dev_runtime"]
}
