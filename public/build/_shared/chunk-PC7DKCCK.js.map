{
  "version": 3,
  "sources": ["../../../app/components/sider/sider-context.tsx"],
  "sourcesContent": ["import { useLocation } from '@remix-run/react'\nimport { ReactNode, useState } from 'react'\nimport { createContext, useReducer } from 'react'\nimport Basket from '~/icons/basket'\nimport Favorite from '~/icons/favorite'\nimport Overview from '~/icons/overview'\nimport Recipe from '~/icons/recipe'\n\nexport interface SiderItemType {\n  icon?: JSX.Element\n  value: string | ReactNode\n  route?: string\n  children?: Omit<SiderItemType, 'children'>[]\n  isBtn?: boolean\n}\nexport enum SiderActionKind {\n  ADD_CHILD = 'ADD_CHILD',\n  UPDATE_CHILD = 'UPDATE_CHILD',\n  SET_NEW_SIDER = 'SET_NEW_SIDER',\n}\ninterface SiderAction {\n  type: SiderActionKind\n  payload: Omit<SiderItemType, 'children'> | SiderItemType[]\n  index?: number\n  childIndex?: number\n}\n\ntype Context = {\n  setHidden: React.Dispatch<React.SetStateAction<boolean>>\n  hidden: boolean\n  close: boolean\n  setClose: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const SiderContext = createContext<Context>({\n  hidden: false,\n  setHidden: () => {},\n  close: false,\n  setClose: () => {},\n})\nconst { Provider } = SiderContext\n\n// const isChild = (\n//   value: SiderAction['payload'],\n// ): value is Omit<SiderItemType, 'children'> => {\n//   return !Array.isArray(value)\n// }\n\n// const reducer = (\n//   state: SiderItemType[],\n//   action: SiderAction,\n// ): SiderItemType[] => {\n//   const newState = [...state]\n//   switch (action.type) {\n//     case SiderActionKind.ADD_CHILD:\n//       if (isChild(action.payload) && typeof action.index !== 'undefined') {\n//         let children = newState[action.index].children\n//           ? newState[action.index].children\n//           : undefined\n//         if (isChild(action.payload) && children !== undefined) {\n//           children[children.length - 1] = action.payload\n//           children.push({\n//             value: 'Add a step',\n//             route: `upload/${children?.length + 1}`,\n//           })\n//           return [...newState]\n//         }\n//       }\n//     case SiderActionKind.UPDATE_CHILD:\n//       // console.log(isChild(action.payload))\n//       if (\n//         typeof action.childIndex === 'number' &&\n//         typeof action.index === 'number' &&\n//         isChild(action.payload)\n//       ) {\n//         let children = newState[action.index].children\n//           ? newState[action.index].children\n//           : undefined\n//         typeof children !== 'undefined' &&\n//           (children[action.childIndex].value = action.payload.value)\n//         return [...newState]\n//       }\n//     case SiderActionKind.SET_NEW_SIDER:\n//       if (!isChild(action.payload)) {\n//         return action.payload\n//       }\n//     default:\n//       return state\n//   }\n// }\n\nexport default function SiderProvider({\n  children,\n}: {\n  children: ReactNode\n}): JSX.Element {\n  const location = useLocation()\n  // const [state, dispatch] = useReducer(reducer, defaultSiderValue)\n  const [hidden, setHidden] = useState(false)\n  const [close, setClose] = useState(false)\n  return (\n    <Provider value={{ hidden, setHidden, close, setClose }}>\n      {children}\n    </Provider>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;AACA,IAAAA,gBAAoC;AACpC,IAAAA,gBAA0C;AAmGtC;AAnEG,IAAM,mBAAe,6BAAuB;AAAA,EACjD,QAAQ;AAAA,EACR,WAAW,MAAM;AAAA,EAAC;AAAA,EAClB,OAAO;AAAA,EACP,UAAU,MAAM;AAAA,EAAC;AACnB,CAAC;AACD,IAAM,EAAE,SAAS,IAAI;AAmDN,SAAR,cAA+B;AAAA,EACpC;AACF,GAEgB;AACd,QAAM,WAAW,YAAY;AAE7B,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,KAAK;AAC1C,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,KAAK;AACxC,SACE,mDAAC,YAAS,OAAO,EAAE,QAAQ,WAAW,OAAO,SAAS,GACnD,YADH;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;",
  "names": ["import_react"]
}
