{
  "version": 3,
  "sources": ["../../../app/components/drop-down-menu.tsx"],
  "sourcesContent": ["import React, { ReactNode, useEffect, useRef, useState } from 'react'\n\nexport default function DropdownMenu({\n  hasDownArrow,\n  icon,\n  summary,\n  details,\n  direction = 'left',\n}: {\n  hasDownArrow?: boolean\n  icon?: ReactNode\n  summary: string | ReactNode\n  details: ReactNode\n  direction?: 'left' | 'right'\n}): JSX.Element {\n  const [open, setOpen] = useState(false)\n  const detailsRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    const clickOutside = (e: MouseEvent) => {\n      if (\n        detailsRef.current &&\n        e.target &&\n        !detailsRef.current.contains(e.target as HTMLElement)\n      ) {\n        setOpen(false)\n      }\n    }\n    window.addEventListener('click', clickOutside)\n\n    return () => {\n      window.addEventListener('click', clickOutside)\n    }\n  }, [])\n\n  return (\n    <div\n      // key={`${summary}`}\n      className=\"relative select-none text-gray-500\"\n      ref={detailsRef}\n    >\n      {typeof summary === 'string' ? (\n        <button\n          className=\"h-full btn-sm bg-white border-none shadow-sm flex items-center gap-2  cursor-pointer\"\n          onClick={e => {\n            setOpen(o => !o)\n          }}\n        >\n          {icon}\n          {summary}\n          {hasDownArrow && (\n            <span\n              className={`material-symbols-rounded transition-transform ${\n                open ? '-rotate-180' : ''\n              }`}\n            >\n              expand_more\n            </span>\n          )}\n        </button>\n      ) : (\n        <div onClick={() => setOpen(prev => !prev)}>{summary}</div>\n      )}\n      {open && (\n        <div\n          className={`\n          absolute z-10 \n          flex flex-col \n           border-gray-200 rounded-lg \n          mt-1 px-2 py-2 \n          bg-white shadow-xl\n          ${direction === 'left' ? '' : 'right-0'}\n\t\t\t\t`}\n        >\n          {details}\n        </div>\n      )}\n    </div>\n  )\n}\n"],
  "mappings": ";;;;;;;;;AAAA,mBAA8D;AAkDlD;AAhDG,SAAR,aAA8B;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAMgB;AACd,QAAM,CAAC,MAAM,OAAO,QAAI,uBAAS,KAAK;AACtC,QAAM,iBAAa,qBAAuB,IAAI;AAC9C,8BAAU,MAAM;AACd,UAAM,eAAe,CAAC,MAAkB;AACtC,UACE,WAAW,WACX,EAAE,UACF,CAAC,WAAW,QAAQ,SAAS,EAAE,MAAqB,GACpD;AACA,gBAAQ,KAAK;AAAA,MACf;AAAA,IACF;AACA,WAAO,iBAAiB,SAAS,YAAY;AAE7C,WAAO,MAAM;AACX,aAAO,iBAAiB,SAAS,YAAY;AAAA,IAC/C;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SACE;AAAA,IAAC;AAAA;AAAA,MAEC,WAAU;AAAA,MACV,KAAK;AAAA,MAEJ;AAAA,eAAO,YAAY,WAClB;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,OAAK;AACZ,sBAAQ,OAAK,CAAC,CAAC;AAAA,YACjB;AAAA,YAEC;AAAA;AAAA,cACA;AAAA,cACA,gBACC;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAW,iDACT,OAAO,gBAAgB;AAAA,kBAE1B;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMA;AAAA;AAAA;AAAA,UAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiBA,IAEA,mDAAC,SAAI,SAAS,MAAM,QAAQ,UAAQ,CAAC,IAAI,GAAI,qBAA7C;AAAA;AAAA;AAAA;AAAA,eAAqD;AAAA,QAEtD,QACC;AAAA,UAAC;AAAA;AAAA,YACC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMT,cAAc,SAAS,KAAK;AAAA;AAAA,YAG7B;AAAA;AAAA,UAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWA;AAAA;AAAA;AAAA,IAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyCA;AAEJ;",
  "names": []
}
