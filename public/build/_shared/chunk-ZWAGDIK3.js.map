{
  "version": 3,
  "sources": ["../../../app/lib/domain/auth/user-context.tsx", "../../../app/components/layout/modal.tsx", "../../../app/components/auth/auth-check.tsx"],
  "sourcesContent": ["import { User } from '@prisma/client'\nimport React from 'react'\nimport { useContext } from 'react'\n\nexport type UserContextType = {\n  id: User['id'] | null\n  email: User['email'] | null\n} | null\n\nexport const userContext = React.createContext<UserContextType>(null)\n\nexport function useUser() {\n  return useContext(userContext)\n}\n", "import type { ReactNode } from 'react'\nimport React, { useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\nexport default function Modal({\n  onClose,\n  open,\n  children,\n  className,\n  dialogClassName,\n}: {\n  onClose: () => void\n  open: boolean\n  children: ReactNode\n  className?: string\n  dialogClassName?: string\n}) {\n  const dialogRef = useRef<HTMLDialogElement>(null)\n  const modalContainer = document.getElementById('modal-container')\n  useEffect(() => {\n    const onClick = (e: MouseEvent) => {\n      if (!(e.target as HTMLElement).contains(dialogRef.current)) {\n        return\n      }\n      if (dialogRef.current) {\n        onClose()\n      }\n    }\n    document.addEventListener('click', onClick)\n    return () => {\n      document.removeEventListener('click', onClick)\n    }\n  }, [onClose])\n  useEffect(() => {\n    if (!dialogRef.current) {\n      return\n    }\n    if (open) {\n      dialogRef.current.showModal()\n    } else {\n      dialogRef.current.close()\n    }\n  }, [open])\n\n  if (!modalContainer) {\n    throw new Error('modal-container not found!')\n  }\n\n  return ReactDOM.createPortal(\n    <dialog\n      className={` p-0 bg-transparent ${dialogClassName ?? ''}`}\n      ref={dialogRef}\n    >\n      <div className={` bg-white ${className ?? ''}`}>{children}</div>\n    </dialog>,\n    modalContainer,\n  )\n}\n", "import { User } from '@prisma/client'\nimport { useLocation } from '@remix-run/react'\nimport React, { ReactElement, ReactNode, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserContextType, useUser } from '../../lib/domain/auth/user-context'\nimport Modal from '../layout/modal'\n\nexport default function AuthCheck({\n  children,\n  loginConfirmModal = true,\n}: {\n  children: (user: UserContextType) => ReactElement\n  loginConfirmModal?: boolean\n}): JSX.Element | null {\n  const user = useUser()\n  const location = useLocation()\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    setOpen(false)\n  }, [location.pathname])\n\n  if (!user || !user.id) {\n    return (\n      <div\n        onClick={e => {\n          if (loginConfirmModal) {\n            setOpen(true)\n          }\n        }}\n      >\n        {children(user)}\n        {loginConfirmModal ? (\n          <Modal\n            onClose={() => setOpen(false)}\n            open={open}\n            className=\"w-96 rounded-xl layout-px layout-py\"\n          >\n            <h3 className=\"mb-10 text-center\">Login to continue</h3>\n            <div className=\"flex justify-center gap-6\">\n              <Link\n                to={`/login?redirectTo=${window.location.href}`}\n                className=\"btn-sm btn-secondary\"\n                onClick={e => e.stopPropagation()}\n              >\n                Login\n              </Link>\n              <button\n                className=\"btn-sm btn-gray\"\n                onClick={e => {\n                  e.stopPropagation()\n                  setOpen(false)\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </Modal>\n        ) : null}\n      </div>\n    )\n  }\n\n  return children(user)\n  // if (user) {\n  //   if (typeof children === 'function') {\n  //   }\n  //   return <>{children}</>\n  // }\n  // return null\n}\n"],
  "mappings": "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",
  "names": ["import_react", "React", "import_react", "ReactDOM", "import_react", "import_jsx_dev_runtime"]
}
