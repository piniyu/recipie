{
  "version": 3,
  "sources": ["empty-module:../lib/loaders/search-recipes.server", "../../../app/routes/index.tsx"],
  "sourcesContent": ["module.exports = {};", "import { Prisma } from '@prisma/client'\nimport type { LoaderFunction } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Outlet, useFetcher, useLoaderData } from '@remix-run/react'\nimport { useEffect, useState } from 'react'\nimport CardGrid from '~/components/card/card-grid'\nimport DropdownMenu from '~/components/drop-down-menu'\nimport SearchBar from '~/components/search-bar'\nimport { getAllRecipes, getLikedAndBasket } from '~/lib/loaders/query-card-list'\nimport { db } from '~/utils/db.server'\nimport { getUserId } from '~/utils/session.server'\nimport { searchAllRecipes } from '../lib/loaders/search-recipes.server'\n\nexport interface CardListLoaderData {\n  searcheRes: Awaited<ReturnType<typeof searchAllRecipes>>\n  allRecipe: Awaited<ReturnType<typeof getLikedAndBasket>>\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const searchRes = await searchAllRecipes(request)\n  const userId = await getUserId(request)\n  const allRecipe = await getAllRecipes()\n  if (!userId) {\n    return json({ searchRes, allRecipe })\n  }\n\n  const allRecipeWithLiked = await getLikedAndBasket({\n    userId,\n    recipes: allRecipe,\n  })\n\n  return json({ searchRes, allRecipe: allRecipeWithLiked })\n}\n\nexport default function Index() {\n  const data = useLoaderData() as CardListLoaderData\n  const fetcher = useFetcher<CardListLoaderData>()\n  const [resList, setResList] = useState<CardListLoaderData['searcheRes']>([])\n  useEffect(() => {\n    if (fetcher.data?.searcheRes) {\n      setResList(fetcher.data.searcheRes)\n    }\n  }, [fetcher.data?.searcheRes])\n  return (\n    <div className=\"layout-pt layout-px flex flex-col gap-9\">\n      <div className=\"flex justify-center gap-6\">\n        <SearchBar\n          list={resList?.map(item => ({ value: item.title, id: item.id }))}\n          fetch={inputValue => {\n            fetcher.load(`/?index&search=${inputValue}`)\n          }}\n        />\n        <DropdownMenu\n          summary=\"New\"\n          details={<span>Popular</span>}\n          hasDownArrow\n        />\n        <DropdownMenu\n          summary=\"Filter\"\n          details={<div>filter checkbox</div>}\n          icon={<span className=\"material-symbols-rounded\">tune</span>}\n        />\n      </div>\n\n      <CardGrid data={data.allRecipe} />\n    </div>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACIlB,IAAAA,gBAAoC;AAMpC,qBAA0B;AAC1B,4BAAiC;AAmCzB;AAZO,SAAR,QAAyB;AAlChC;AAmCE,QAAM,OAAO,cAAc;AAC3B,QAAM,UAAU,WAA+B;AAC/C,QAAM,CAAC,SAAS,UAAU,QAAI,wBAA2C,CAAC,CAAC;AAC3E,+BAAU,MAAM;AAtClB,QAAAC;AAuCI,SAAIA,MAAA,QAAQ,SAAR,gBAAAA,IAAc,YAAY;AAC5B,iBAAW,QAAQ,KAAK,UAAU;AAAA,IACpC;AAAA,EACF,GAAG,EAAC,aAAQ,SAAR,mBAAc,UAAU,CAAC;AAC7B,SACE,mDAAC,SAAI,WAAU,2CACb;AAAA,uDAAC,SAAI,WAAU,6BACb;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAM,mCAAS,IAAI,WAAS,EAAE,OAAO,KAAK,OAAO,IAAI,KAAK,GAAG;AAAA,UAC7D,OAAO,gBAAc;AACnB,oBAAQ,KAAK,kBAAkB,YAAY;AAAA,UAC7C;AAAA;AAAA,QAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS,mDAAC,UAAK,uBAAN;AAAA;AAAA;AAAA;AAAA,iBAAa;AAAA,UACtB,cAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS,mDAAC,SAAI,+BAAL;AAAA;AAAA;AAAA;AAAA,iBAAoB;AAAA,UAC7B,MAAM,mDAAC,UAAK,WAAU,4BAA2B,oBAA3C;AAAA;AAAA;AAAA;AAAA,iBAA+C;AAAA;AAAA,QAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,IAEA,mDAAC,YAAS,MAAM,KAAK,aAArB;AAAA;AAAA;AAAA;AAAA,WAAgC;AAAA,OApBlC;AAAA;AAAA;AAAA;AAAA,SAqBA;AAEJ;",
  "names": ["import_react", "_a"]
}
