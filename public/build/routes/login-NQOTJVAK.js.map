{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["import { ActionFunction, json, MetaFunction } from '@remix-run/node'\nimport { useSearchParams, useSubmit } from '@remix-run/react'\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { metaTitlePostfix } from '~/root'\nimport { db } from '~/utils/db.server'\nimport { createUserSession, login, register } from '~/utils/session.server'\n\ntype FormProps = {\n  email: string\n  password: string\n  redirectTo: string\n  formType: 'register' | 'login'\n}\n\ntype ActionData = {\n  formError?: string\n  // fieldErrors?: {\n  //   email: string | undefined\n  //   password: string | undefined\n  // }\n  fields?: Omit<FormProps, 'redirectTo'>\n}\n\nexport const meta: MetaFunction = () => ({\n  title: 'Login' + metaTitlePostfix,\n})\n\nfunction validateUrl(url: any, host: string) {\n  console.log(url)\n  // let urls = ['/', 'http://localhost:3000']\n  if (url.includes(host)) {\n    return url\n  }\n  return '/'\n}\n\nfunction validateFormType(formType: any): formType is FormProps['formType'] {\n  return (\n    typeof formType === 'string' && ['login', 'register'].includes(formType)\n  )\n}\n\nconst badRequest = (data: ActionData) => json(data, { status: 400 })\n\nexport const action: ActionFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const form = await request.formData()\n  const email = form.get('email')\n  const password = form.get('password')\n  const redirectTo = validateUrl(form.get('redirectTo') || '/', url.host)\n  const formType = form.get('formType')\n\n  if (\n    typeof email !== 'string' ||\n    typeof password !== 'string' ||\n    typeof redirectTo !== 'string' ||\n    !validateFormType(formType)\n  ) {\n    return badRequest({ formError: `Form not submitted correctly` })\n  }\n\n  const fields = { formType, email, password }\n\n  switch (formType) {\n    case 'login': {\n      const user = await login({ email, password })\n      console.log({ user })\n      if (!user) {\n        return badRequest({\n          fields,\n          formError: `Email of Password combination is incorrect`,\n        })\n      }\n      console.log(redirectTo)\n      return createUserSession(user.id, redirectTo)\n      // return badRequest({ fields, formError: 'Not implemented' })\n    }\n    case 'register': {\n      const userExists = await db.user.findFirst({\n        where: { email },\n      })\n      if (userExists) {\n        return badRequest({ fields, formError: 'User already exists' })\n      }\n      const user = await register({ email, password })\n      if (!user) {\n        return badRequest({\n          fields,\n          formError: 'Somethig went wrong trying to create a new user',\n        })\n      }\n      return createUserSession(user.id, redirectTo)\n    }\n    default: {\n      return badRequest({ fields, formError: `FormType invalid` })\n    }\n  }\n}\n\nexport default function Login() {\n  const [formType, setFormType] = useState<FormProps['formType']>('login')\n  const [searchParams] = useSearchParams()\n  const submit = useSubmit()\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: { errors, isDirty },\n  } = useForm<FormProps>({\n    defaultValues: {\n      email: '',\n      password: '',\n      redirectTo: '',\n      formType: 'login',\n    },\n  })\n  const [watchEmail, watchPsw] = watch(['email', 'password'])\n\n  const onSubmit = (v: FormProps, e?: any) => {\n    console.log(v, e)\n    submit(e.target)\n  }\n\n  return (\n    <div className=\"mx-auto layout-px layout-pb pt-32 max-w-6xl flex justify-center\">\n      <div className=\"flex flex-col w-96 bg-white p-8 rounded-xl shadow-2xl shadow-gray-300/50 space-y-6\">\n        <h1> {formType === 'login' ? 'Login' : 'Create account'}</h1>\n        {formType === 'register' ? (\n          <div className=\"flex space-x-2 p-4 rounded-lg bg-primary/10\">\n            <span className=\"material-symbols-rounded text-primary\">\n              priority_high\n            </span>\n            <p>\n              Please do not input any sensitive personal informations, since\n              this is a demo website which does not protect your datas and would\n              delete the datas in 7 days.\n            </p>\n          </div>\n        ) : null}\n        <form\n          method=\"post\"\n          className=\"flex flex-col gap-y-6\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input {...register('formType')} type=\"hidden\" value={formType} />\n          <input\n            {...register('redirectTo')}\n            type=\"hidden\"\n            value={searchParams.get('redirectTo') ?? undefined}\n          />\n          <label\n            className={`\n            relative \n            before:block \n            before:content-['Email'] \n            before:absolute \n            before:top-2\n            before:left-2 \n            before:origin-top-left\n            before:px-1\n            before:bg-white \n            before:text-gray-400\n            ${\n              watchEmail.length > 0\n                ? `before:-top-2 before:text-gray-500 before:scale-75`\n                : ''\n            }\n            focus-within:before:-top-2\n            focus-within:before:text-black\n            focus-within:before:scale-75\n            before:transition-all\n            before:cursor-text\n            `}\n          >\n            <input\n              {...register('email', {\n                required: true,\n              })}\n              type=\"email\"\n              className=\"input w-full\"\n              autoComplete=\"email\"\n            />\n          </label>\n          <label\n            className={`\n            relative \n            before:block \n            before:content-['Password'] \n            before:absolute \n            before:top-2\n            before:left-2 \n            before:origin-top-left\n            before:px-1\n            before:bg-white \n            before:text-gray-400\n            ${\n              watchPsw.length > 0\n                ? `before:-top-2 before:text-gray-500 before:scale-75`\n                : ''\n            }\n            focus-within:before:-top-2\n            focus-within:before:text-black\n            focus-within:before:scale-75\n            before:transition-all\n            before:cursor-text\n            `}\n          >\n            <input\n              {...register('password', {\n                required: true,\n                // pattern: /[A-Za-z]{1,}[1-9]+/,\n                // maxLength: 32,\n                // minLength: 8,\n              })}\n              type=\"password\"\n              className=\"input w-full\"\n              autoComplete=\"current-password\"\n            />\n            <span\n              className={`text-xs ${\n                errors.password ? 'text-red-500' : 'text-gray-500'\n              } `}\n            >\n              Should include charactor and number and begin with charactor in\n              8-32 long\n            </span>\n          </label>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"btn-primary btn-md w-full\"\n              disabled={!isDirty}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n        {formType === 'login' ? (\n          <button className=\"link\" onClick={() => setFormType('register')}>\n            Create new account\n          </button>\n        ) : (\n          <button className=\"link\" onClick={() => setFormType('login')}>\n            Login\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n"],
  "mappings": "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",
  "names": ["import_react", "register"]
}
